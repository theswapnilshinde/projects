package com.example.demo.Controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.Service.StudentService;
import com.example.demo.entity.Student;



@CrossOrigin
@RestController
@RequestMapping(value = "/student")
public class StudentController {
	
	@Autowired
	StudentService studentService;
	@PostMapping("/add")
	public String add(@RequestBody Student student) {
		studentService.addCourse(student);
		return "student Added in db";
		
	}
	
	@GetMapping("/get")
	public List<Student>  showAll()
	{
		return studentService.listCourse();
		
	}
	
	@PutMapping("/put")
	public String update(@RequestBody Student student )
	{
		studentService.editCourse(student);
		return "student Updated";
		
	}
	
	@DeleteMapping("/delete/{id}")
	public String deleteCourse(@PathVariable ("id") int id)
	{
		studentService.deleteStudent(id);
		  return "student Deleted";
		
	}
	/*
	 * @PutMapping("/showAll") public List<Course> shoall() { return
	 * courseService.showall();
	 * 
	 * }
	 */
	@PutMapping("/find/{id}")
	public Optional<Student> findByIdCourse(@PathVariable("id") int id) {
		return studentService.findidStudent(id);
		
	}
	
	@PostMapping("validate")
	//@ApiOpration(value="")
	public ResponseEntity<?> validateUse(@RequestBody Student student)
	{
		//System.out.println(student);s
		  student = studentService.validate(student);
		  if(student !=null)
		  {
			  return new ResponseEntity<Student>(student,HttpStatus.OK);
		  }
		  else {
			  return new ResponseEntity<String>("Invalid Email OR Passwor",HttpStatus.ACCEPTED);
		  }
		
		return null;
		
	}
}
